#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage[normalem]{ulem}

% hack into hyperref
\makeatletter
\DeclareUrlCommand\ULurl@@{%
  \def\UrlFont{\ttfamily\color{blue}}%
  \def\UrlLeft{\uline\bgroup}%
  \def\UrlRight{\egroup}}
\def\ULurl@#1{\hyper@linkurl{\ULurl@@{#1}}{#1}}
\DeclareRobustCommand*\url{\hyper@normalise\ULurl@}
\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor={black}, urlcolor={blue}"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\rightmargin 2cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Amazon Web Services IoT
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename img/aws-iot.pdf
	lyxscale 200
	width 25col%

\end_inset


\begin_inset Newline newline
\end_inset


\size larger
Internet de las Cosas
\size large

\begin_inset Newline newline
\end_inset


\size normal
Máster en Ciencia de Datos e Ingeniería de Computadores
\begin_inset Newline newline
\end_inset

Universidad de Granada
\end_layout

\begin_layout Author
Cristian G Guerrero
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introducción
\end_layout

\begin_layout Standard
Este documento presenta ...
\end_layout

\begin_layout Standard
Este documento se organiza en las siguientes secciones: 
\end_layout

\begin_layout Itemize
En primer lugar, presentaremos la plataforma de Amazon para Internet de
 las Cosas (AWS IoT).
 Bajo este epígrafe describiremos aspectos que será conveniente tener en
 cuenta en la posterior integración de la
\end_layout

\begin_layout Itemize
A continuación, discutiremos los elementos necesarios para llevar a cabo
 la implementación de la conexión de AWS con el dispositivo ESP8266.
\end_layout

\begin_layout Itemize
Finalmente, montaremos un panel de visualización de datos (dashboard) basado
 en ###.
\end_layout

\begin_layout Chapter
Amazon Web Services IoT
\end_layout

\begin_layout Standard
En esta sección describimos la arquitectura de la plataforma de Amazon para
 Internet de las Cosas, explorando su potencial y las particularidades que
 presenta.
\end_layout

\begin_layout Standard
Como se describe en #missing reference#, AWS IoT proporciona una 
\emph on
comunicación bidireccional segura
\emph default
 entre dispositivos conectados a Internet, como sensores, actuadores, microcontr
oladores embebidos o electrodomésticos inteligentes y la nube de Amazon
 (
\emph on
AWS Cloud
\emph default
).
 Esto nos permite recoger y almacenar y analizar datos de una gran variedad
 de dispositivos.
 Del mismo modo, nos permite crear aplicaciones que permitan controlar estos
 dispositivos a través de un 
\emph on
smartphone
\emph default
 o 
\emph on
tablet
\emph default
.
\end_layout

\begin_layout Standard
En este sentido, AWS IoT actúa como una pasarela a la cuál pueden conectarse
 tanto dispositivos como aplicaciones de terceros.
 Además, ofrece una interfaz sencilla para procesar los datos recogidos
 a través de los demás servicios de AWS.
 Este modo de operación hace que Amazon se haya esforzado en proporcionar
 una plataforma robusta y segura, con un panel de control relativamente
 complejo que permite gestionar todas las opciones.
 No obstante, AWS IoT no proporciona por sí mismo herramientas para representar
 los datos obtenidos.
\end_layout

\begin_layout Section
Componentes de AWS IoT
\end_layout

\begin_layout Standard
A continuación describimos los componentes principales de AWS IoT.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/AWS_IoT23._CB520207442_.png
	lyxscale 60
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Principales componentes de AWS IoT.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description
Device
\begin_inset space ~
\end_inset

gateway
\begin_inset space ~
\end_inset

(
\emph on
Gateway
\begin_inset space ~
\end_inset

para
\begin_inset space ~
\end_inset

dispositivos
\emph default
) se encarga de establecer la comunicación entre la nube de Amazon y cada
 dispositivo.
 El 
\emph on
Device
\begin_inset space ~
\end_inset

gateway
\emph default
 es el responsable de que esta comunicación se lleve a cabo de forma eficiente
 y segura.
\end_layout

\begin_deeper
\begin_layout Description
Message
\begin_inset space ~
\end_inset

broker
\begin_inset space ~
\end_inset

(
\emph on
Agente
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

mensajes
\emph default
) proporciona un mecanismo seguro para que los dispositivos y las aplicaciones
 de AWS IoT publiquen y reciban mensajes entre sí, basándose en el protocolo
 MQTT o en MQTT sobre WebSocket.
\end_layout

\end_deeper
\begin_layout Description
Rules
\begin_inset space ~
\end_inset

engine
\begin_inset space ~
\end_inset

(
\emph on
Motor
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

reglas
\emph default
) proporciona funciones de procesamiento de mensajes y de integración con
 otros sevicios de la nube de Amazon.
 También permite usar el 
\emph on
Message
\begin_inset space ~
\end_inset

broker
\emph default
 para volver a publicar mensajes para otros suscriptores.
\end_layout

\begin_layout Description
Registry
\begin_inset space ~
\end_inset

(
\emph on
Registro
\emph default
) organiza los recursos asociados a cada dispositivo en la nube de Amazon
 (AWS Cloud).
 Es necesario registrar los dispositivos y asociar hasta tres atributos
 personalizados a cada uno.
 Este componente también es responsable de asociar los certificados digitales
 y los IDs de clientes MQTT a cada dispositivo.
\end_layout

\begin_deeper
\begin_layout Description
Group
\begin_inset space ~
\end_inset

registry
\begin_inset space ~
\end_inset

(
\emph on
Registro
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

grupos
\emph default
) permite administrar varios dispositivos a la vez clasificándolos en grupos.
\end_layout

\end_deeper
\begin_layout Description
Device
\begin_inset space ~
\end_inset

shadow
\begin_inset space ~
\end_inset

(
\emph on
Sombra
\begin_inset space ~
\end_inset

del
\begin_inset space ~
\end_inset

dispositivo
\emph default
) documento JSON utilizado para almacenar y recuperar información del estado
 actual de un dispositivo.
\end_layout

\begin_layout Standard
AWS IoT dispone de otros componentes y servicios con los que el desarrollador
 puede interactuar para realizar tareas específicas.
 No obstante, su uso es más avanzado y queda fuera de los objetivos de este
 documento.
\end_layout

\begin_layout Standard
Cabe mencionar que tanto el agente de mensajes como el motor de reglas utilizan
 las características de seguridad de AWS para enviar datos de forma segura
 a dispositivos u otros servicios de AWS.
 De este modo, tan solo los dispositivos convenientemente autorizados pueden
 establecer una comunicación con AWS IoT.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Esquema-de-funcionamiento"

\end_inset

Esquema de funcionamiento
\end_layout

\begin_layout Standard
Dispositivo físico ejecutando la AWS IoT SDK.
 Debe disponer de un certificado digital que lo autentique y del CA necesario
 para autenticar AWS.
\end_layout

\begin_layout Standard
Por otro lado, tendremos que definir este dispositivo en la plataforma,
 usando la herramienta de 
\emph on
registro
\emph default
.
 Este dispositivo virtual tendrá que tener asociado un certificado digital
 válido (el mismo que el del dispositivo).
\end_layout

\begin_layout Standard
A la hora de conectarse:
\end_layout

\begin_layout Enumerate
El dispositivo, que actuará con el rol de cliente, inicia una comunicación
 segura TLS con el servidor de AWS IoT seleccionado.
\end_layout

\begin_layout Enumerate
Servidor y cliente intercambian y verifican el certificado digital de la
 otra parte, asegurándose la autenticidad de los extremos.
 Terminado este paso, dispositivo y plataforma se comunican de forma segura,
 cifrando los mensajes con una clave establecida para la sesión.
\end_layout

\begin_layout Enumerate
Intercambio de mensajes MQTT/HTTP.
\end_layout

\begin_layout Standard
Cuando la plataforma recibe un mensaje MQTT válido, lo procesa convenientemente.
 Si este mensaje se corresponde a algún parámetro asociado al dispositivo
 virtual, 
\color red
actualiza su sombra
\color inherit
.
\end_layout

\begin_layout Standard

\color red
Certificate ARN
\end_layout

\begin_layout Standard

\color red
A certificate ARN uniquely identifies a certificate in AWS.
 You can use this ARN to interact with this certificate through CLI and
 other methods.
 
\end_layout

\begin_layout Standard

\color red
arn:aws:iot:us-west-2:552719360781:cert/c1a1b8ee69b533eb10a38908d9e7cf0b41b33987
1111955c0336e94c4fe5a56d
\end_layout

\begin_layout Standard

\color red
Thing ARN
\end_layout

\begin_layout Standard

\color red
A thing Amazon Resource Name uniquely identifies this thing.
 
\end_layout

\begin_layout Standard

\color red
arn:aws:iot:us-west-2:552719360781:thing/test_0
\end_layout

\begin_layout Section
Disparadores y reglas
\end_layout

\begin_layout Standard
AWS IoT permite definir reglas con las que pueden realizarse diversas acciones
 al detectar eventos determinados.
 De este modo, la podemos indicarle a la plataforma que realice las acciones
 necesarias cuando se produzca un evento determinado en cualquiera de los
 dispositivos definidos.
 Estos eventos incluyen la superación de un umbral en un parámetro o la
 aparición de un valor o atributo determinado en un 
\emph on
topic
\emph default
 de MQTT.
 Las acciones que pueden asociarse a un evento suponen la interacción con
 otros servicios de la nube de Amazon.
 Así, por ejemplo, es posible intertar un nuevo registro en una base de
 datos AWS
\begin_inset space ~
\end_inset

DynamoDB, invocar una función AWS
\begin_inset space ~
\end_inset

Lambda o enviar mensajes específicos a AWS
\begin_inset space ~
\end_inset

Salesforce.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
AWS Lambda??
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
AWS Greengrass
\end_layout

\begin_layout Standard
AWS Greengrass es una nueva tecnología de Amazon, independiente a AWS IoT.
 Este servicio nos permite almacenar los datos generados por un grupo de
 dispositivos en la red local, optimizando el uso de la red y permitiendo
 ejecutar acciones de forma local.
 Para ello, comenzamos por definir un conjunto de dispositivos, que denominaremo
s 
\emph on
Greengrass
\begin_inset space ~
\end_inset

Group
\emph default
.
 Este grupo tiene como componente central un elemento físico: el
\emph on
 Greengrass
\begin_inset space ~
\end_inset

Core
\emph default
.
 Definiremos tanto la arquitectura del Greengrass Group como los disparadores
 asociados a los distintos eventos de forma segura en la plataforma AWS
 Greengrass.
 De esta manera, la publicación y recepción de mensajes y las reglas quedan
 definidas en la nube.
 Una vez concluida la configuración, su despliegue en el la red de área
 local es tan simple como sincronizar el Greengrass Core, que pasará a adoptar
 la configuración definida en la nube.
 Como resultado, el grupo de dispositivos es capaz de almacenar los datos
 y procesarlos a pesar de que la conexión a Internet sea intermitente, permitien
do una respuesta rápida a los eventos y optimizando los recursos de red.
\end_layout

\begin_layout Chapter
Conexión entre ESP8266 y AWS IoT
\end_layout

\begin_layout Section
Inicialización de la plataforma
\end_layout

\begin_layout Standard
En esta sección trataremos todo lo referente a la configuración de la plataforma
 AWS IoT, desde el registro en la misma hasta la definición de los dispositivos
 y demás elementos.
\end_layout

\begin_layout Subsection
Registro
\end_layout

\begin_layout Standard
Amazon Web Services (AWS) ofrece un amplio rango de servicios de computación
 en la nube.
 Para cada servicio, el usuario debe abonar el precio correspondiente a
 los recursos requeridos.
 Aunque existen varias modalidades de facturación, todas ellas requieren
 que el usuario registre un método de pago.
 Sin embargo, existen dos alternativas 
\begin_inset Quotes fld
\end_inset

libres de gastos
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsubsection
AWS Free Tier
\end_layout

\begin_layout Standard
Amazon establece un período de prueba gratuito para atraer nuevos clientes
 y dar a conocer su tecnología.
 En este período, es posible utilizar la mayoría de los servicios ofrecidos
 por AWS sin incurrir en gastos.
 No obstante, es necesario configurar un método de pago para comenzar a
 usar los servicios.
 Todos los detalles sobre AWS Free Tier están disponibles en 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/free/
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
AWS Educate
\end_layout

\begin_layout Standard
AWS Educate proporciona a profesores y alumnos acceso a muchos de los servicios
 de AWS.
 Además, incluye ventajas como programas de capacitación y rutas profesionales
 en la nube de Amazon.
 Esta modalidad, que está disponible en 47 países, requiere que el usuario
 esté vinculado a alguna institución académica y procese una solicitud que
 será tratada de forma personalizada por Amazon
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Deberá usarse el correo institucional en la solicitud.
\end_layout

\end_inset

.
 Los detalles de esta modalidad están disponibles en 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://aws.amazon.com/education/
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
En la realización de este trabajo, hemos elegido esta segunda opción.
\end_layout

\begin_layout Subsection
Acceso a la plataforma
\end_layout

\begin_layout Standard
Una vez realizado el registro, accederemos a la plataforma de AWS siguiendo
 las instrucciones que recibiremos por e-mail.
 Si hemos creado una cuenta usando la modalidad AWS
\begin_inset space ~
\end_inset

Educate, accederemos a la plataforma a través de la web 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.awseducate.com/signin
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Una vez que nos hayamos logueado en AWS, tendremos que dirigirnos al panel
 de control de AWS
\begin_inset space ~
\end_inset

IoT.
 Para ello, haremos click en la pestaña 
\begin_inset Quotes fld
\end_inset

Servicios
\begin_inset Quotes frd
\end_inset

 y buscaremos la opción 
\emph on
IoT
\begin_inset space ~
\end_inset

Core
\emph default
, como se muestra en la figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Servicios-AWS"

\end_inset

.
 La primera vez que accedamos al servicio, nos encontraremos con el mensaje
 de bienvendia de la figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Bienvenida-AWS-IoT"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/platform-01-services.png
	lyxscale 50
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Servicios-AWS"

\end_inset

Servicios disponibles en AWS.
 Buscaremos el servicio IoT
\begin_inset space ~
\end_inset

Core.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tb
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/platform-02-welcome.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Bienvenida-AWS-IoT"

\end_inset

Pantalla de bienvenida en la cosola de AWS
\begin_inset space ~
\end_inset

IoT.
 Podemos acceder a los recursos didácticos presentados aquí en cualquier
 momento, a través de la pestaña 
\emph on
Learn
\emph default
.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Configuración del dispositivo
\end_layout

\begin_layout Standard
Como se ha indicado en el epígrafe
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Esquema-de-funcionamiento"

\end_inset

, para conectar el dispositivo tendremos que definirlo en la plataforma.
 También tendremos que asignarle un certificado digital y tomar nota de
 una serie de referencias.
\end_layout

\begin_layout Standard
A continuación describimos los pasos necesarios para crear un dispositivo
 en AWS
\begin_inset space ~
\end_inset

IoT y definir lo parámetros necesarios.
\end_layout

\begin_layout Subsubsection
Creación del dispositivo
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/platform-03-manage-things.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Manage-Things"

\end_inset

Pestaña de administración de dispositivos (
\emph on
AWS
\begin_inset space ~
\end_inset

Io
\family sans
\lang english
T\SpecialChar menuseparator
Manage\SpecialChar menuseparator
Things
\emph default
).
\end_layout

\end_inset


\end_layout

\end_inset

Para crear nuestro primer dispositivo, nos dirigiremos a la pestaña 
\emph on
Manage
\emph default
, y ahí seleccionaremos 
\emph on
Things
\emph default
.
 Nos encontraremos con la siguiente pantalla (figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Manage-Things"

\end_inset

), en la que pincharemos el botón 
\emph on
Register
\begin_inset space ~
\end_inset

a
\begin_inset space ~
\end_inset

thing
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/platform-04-register-a-thing.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Register-a-thing"

\end_inset

Opciones para el registro de dispositivos.
\end_layout

\end_inset


\end_layout

\end_inset

Seleccionaremos 
\emph on
Create
\begin_inset space ~
\end_inset

a
\begin_inset space ~
\end_inset

single
\begin_inset space ~
\end_inset

thing
\emph default
 (figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Register-a-thing"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/platform-05-thing-details.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:form:thing-parameters"

\end_inset

Formulario de parámetros del dispositivo.
\end_layout

\end_inset


\end_layout

\end_inset

Ahora podremos empezar a definir los distintos parámetros de nuestro dispositivo
 (figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:form:thing-parameters"

\end_inset

).
 Para empezar, tendremos que darle un nombre a nuestro dispositivo.
 Aunque este es el único campo requerido, también será conveniente asignarle
 un tipo al dispositivo.
 Esto nos permitirá tener una serie de atributos que habremos asociado a
 este tipo.
 De lo contrario, tendremos que definir los atributos de los que dispondrá
 nues dispositivo manualmente, repitiendo el proceso para cada nuevo dispositivo.
\end_layout

\begin_layout Standard
Si no tenemos ningún tipo definido aún, podemos crearlo desde aquí, pinchando
 en el botón 
\emph on
Create
\begin_inset space ~
\end_inset

a
\begin_inset space ~
\end_inset

type
\emph default
.
 Una vez creado el tipo, podremos seleccionarlo desde el menú desplegable.
 De esta forma, la sección de atributos visibles habrá quedado rellena.
\end_layout

\begin_layout Standard
Si deseamos que nuestro dispositivo cuente con atributos invisibles podemos
 definirlos justo debajo.
\end_layout

\begin_layout Standard
Una vez que hayamos terminado de definir nuestro dispositivo, pulsaremos
 el botón 
\emph on
Next
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/platform-06-thing-type.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:form:thing-type"

\end_inset

Formulario de parámetros del dispositivo.
\end_layout

\end_inset


\end_layout

\end_inset

Si nos hemos decidido por crear un tipo de dispositivo (figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:form:thing-type"

\end_inset

), tendremos que seleccionar qué atributos compartirán los elementos del
 mismo, como se muestra a continuación.
 Destacaremos aquí que estos atributos son siempre visibles.
\end_layout

\begin_layout Subsubsection
Creación del certificado digital
\end_layout

\begin_layout Section
Conexión del dispositivo a la plataforma
\end_layout

\begin_layout Chapter
Visualización de los datos
\end_layout

\end_body
\end_document
